@startuml
!theme vibrant
actor User
participant ":Main" as Main
participant ":StorageManager" as StorageManager
participant ":Parser" as Parser
participant ":ByeCommand" as ByeCommand
participant ":InvalidCommand" as InvalidCommand
participant ":Ui" as Ui

activate Main
Main -> StorageManager : loadExpenseManager(ui)
activate StorageManager
StorageManager --> Main : expenseManager
deactivate StorageManager

loop until user enters "bye"

    User -> Main : enters command

    Main -> Parser : parse(command)
    activate Parser

    alt bye command

        create ByeCommand
        Parser -> ByeCommand
        activate ByeCommand
        Parser --> Main : byeCommand
        deactivate ByeCommand

    else invalid bye command (e.g., "bye extra")

        create InvalidCommand
        Parser -> InvalidCommand
        Parser --> Main : invalidCommand

    end

    deactivate Parser

    alt command is ByeCommand
        Main -> ByeCommand : execute(expenseManager, ui)
        activate ByeCommand

        ByeCommand -> Ui : showSeparator()
        activate Ui
        deactivate Ui
        ByeCommand -> Ui : showGoodbye()
        activate Ui
        Ui --> User : displays goodbye message
        deactivate Ui
        ByeCommand -> Ui : showSeparator()
        activate Ui
        deactivate Ui

        deactivate ByeCommand

        Main -> StorageManager : saveExpenseManager(expenseManager, ui)
        activate StorageManager
        deactivate StorageManager

        Main -> ByeCommand : isExit()
        activate ByeCommand
        ByeCommand --> Main : true
        deactivate ByeCommand

    else command is InvalidCommand
        Main -> InvalidCommand : execute(expenseManager, ui)
        activate InvalidCommand
        InvalidCommand -> Ui : showError(message)
        activate Ui
        Ui --> User : displays error message
        deactivate Ui
        deactivate InvalidCommand
    end

end

deactivate Main
@enduml
