@startuml
hide circle
skinparam classAttributeIconSize 0

class Serializable <<interface>> {
}

class StorageManager {
  - {static} LOGGER : Logger
  - {static} DIRECTORY : String = "data"
  - {static} FILE_NAME : String = "appdata.ser"
  --
  + {static} saveExpenseManager(expenseManager : ExpenseManager, ui : Ui) : void
  + {static} loadExpenseManager(ui : Ui) : ExpenseManager
}

class ExpenseManager implements Serializable {
  - {static} serialVersionUID : long = 1L
  - {static} LOGGER : Logger
  - {static} BUDGET_ALERT_THRESHOLD : double = 10.0
  - expenses : List<Expense>
  - budget : double = 0.0
  - totalExpenses : double = 0.0
  - remainingBalance : double = 0.0
}

class Expense implements Serializable {
  + {static} DEFAULT_CATEGORY : String = "Uncategorized"
  - {static} serialVersionUID : long = 1L
  - amount : double
  - description : String
  - category : String
  - isMarked : boolean
}

class Ui {
}

enum BudgetStatus <<enumeration>> {
  EXCEEDED
  EQUAL
  NEAR
  OK
}

StorageManager ..> ExpenseManager : uses
StorageManager ..> Ui : uses
ExpenseManager "1" *-- "0..*" Expense : contains
ExpenseManager ..> BudgetStatus : uses

note right of Serializable
  Java standard interface
  for object serialization
end note

note bottom of StorageManager
  Handles persistence using
  Java serialization (ObjectOutputStream
  and ObjectInputStream)
end note

note bottom of ExpenseManager
  Implements Serializable to enable
  saving/loading via StorageManager.
  Contains serialVersionUID for
  version control.
end note

note bottom of Expense
  Implements Serializable as part
  of the ExpenseManager object graph.
  Must be serializable since it's
  stored in ExpenseManager's list.
end note

@enduml