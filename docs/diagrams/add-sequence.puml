@startuml
!theme vibrant
actor User
participant ":Main" as Main
participant ":Parser" as Parser
participant ":ArgumentParser" as ArgumentParser
participant ":InputValidator" as InputValidator
participant ":AddCommand" as AddCommand
participant ":InvalidCommand" as InvalidCommand
participant ":ExpenseManager" as ExpenseManager
participant ":Ui" as Ui

User -> Main : enters "add a/10 desc/lunch cat/food"
activate Main

Main -> Parser : parse("add a/10 desc/lunch cat/food")
activate Parser

create ArgumentParser
Parser -> ArgumentParser : extract prefixes
activate ArgumentParser

Parser -> ArgumentParser : getValue("a/")
ArgumentParser --> Parser : "10"
Parser -> ArgumentParser : getValue("desc/")
ArgumentParser --> Parser : "lunch"
Parser -> ArgumentParser : getOptionalValue("cat/")
ArgumentParser --> Parser : "food"
deactivate ArgumentParser

Parser -> InputValidator : validate amount/description/category
activate InputValidator

alt validation succeeds
    InputValidator --> Parser : validation OK
    deactivate InputValidator
    create AddCommand
    Parser -> AddCommand : amount, description, category
    Parser --> Main : AddCommand

    Main -> AddCommand : execute(expenseManager, ui)
    activate AddCommand
    AddCommand -> ExpenseManager : addExpense(...)
    activate ExpenseManager
    deactivate ExpenseManager
    AddCommand -> Ui : showNewExpense(...)
    activate Ui
    Ui --> User : confirmation message
    deactivate Ui
    deactivate AddCommand
else validation fails
    activate InputValidator
    InputValidator -->> Parser : OrCashBuddyException
    deactivate InputValidator
    create InvalidCommand
    Parser -> InvalidCommand
    Parser --> Main : InvalidCommand

    Main -> InvalidCommand : execute(expenseManager, ui)
    activate InvalidCommand
    InvalidCommand -> Ui : showError(...)
    activate Ui
    Ui --> User : error message
    deactivate Ui
    deactivate InvalidCommand
end

deactivate Parser
deactivate Main
@enduml
