@startuml
!theme vibrant
actor User
participant ":Main" as Main
participant ":Parser" as Parser
participant ":ArgumentParser" as ArgumentParser
participant ":FindCommand" as FindCommand
participant ":InvalidCommand" as InvalidCommand
participant ":ExpenseManager" as ExpenseManager
participant ":Ui" as Ui
participant ":StorageManager" as StorageManager

User -> Main : enters "find cat/food"
activate Main

Main -> Parser : parse("find cat/food")
activate Parser

alt valid search criteria
    create ArgumentParser
    Parser -> ArgumentParser : new ArgumentParser("cat/food")

    Parser -> ArgumentParser : getOptionalValue("cat/")
    activate ArgumentParser
    ArgumentParser --> Parser : "food"
    deactivate ArgumentParser

    Parser -> ArgumentParser : getOptionalValue("desc/")
    activate ArgumentParser
    ArgumentParser --> Parser : null
    deactivate ArgumentParser

    create FindCommand
    Parser -> FindCommand : new FindCommand("category", "food")
    Parser --> Main : findCommand

else missing search criteria
    Parser -> ArgumentParser : getOptionalValue("cat/")
    activate ArgumentParser
    ArgumentParser --> Parser : null
    deactivate ArgumentParser

    Parser -> ArgumentParser : getOptionalValue("desc/")
    activate ArgumentParser
    ArgumentParser --> Parser : null
    deactivate ArgumentParser

    Parser -->> Parser : throws OrCashBuddyException

    create InvalidCommand
    Parser -> InvalidCommand
    Parser --> Main : invalidCommand
end

deactivate Parser

alt valid find command
    Main -> FindCommand : execute(expenseManager, ui)
    activate FindCommand

    FindCommand -> ExpenseManager : findExpensesByCategory("food")
    activate ExpenseManager
    ExpenseManager --> FindCommand : foundExpenses
    deactivate ExpenseManager

    FindCommand -> Ui : showSeparator()
    activate Ui
    deactivate Ui

    FindCommand -> Ui : showFoundExpenses(foundExpenses, "food", "category")
    activate Ui
    Ui --> User : displays search results
    deactivate Ui

    FindCommand -> Ui : showSeparator()
    activate Ui
    deactivate Ui

    deactivate FindCommand
    destroy FindCommand

    Main -> StorageManager : saveExpenseManager(expenseManager, ui)
    activate StorageManager
    StorageManager --> Main
    deactivate StorageManager

else invalid command
    Main -> InvalidCommand : execute(expenseManager, ui)
    activate InvalidCommand

    InvalidCommand -> Ui : showSeparator()
    activate Ui
    deactivate Ui

    InvalidCommand -> Ui : showFindUsage()
    activate Ui
    Ui --> User : displays usage message
    deactivate Ui

    InvalidCommand -> Ui : showSeparator()
    activate Ui
    deactivate Ui

    deactivate InvalidCommand
    destroy InvalidCommand
end

deactivate Main
@enduml